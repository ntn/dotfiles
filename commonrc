if [ -n "$ZSH_VERSION" ]; then

    if [[ "$TERM" == "dumb" ]]
    then
      unsetopt zle
      unsetopt prompt_cr
      unsetopt prompt_subst
      if whence -w precmd >/dev/null; then
          unfunction precmd
      fi
      if whence -w preexec >/dev/null; then
          unfunction preexec
      fi
      PS1='$ '
      return
    fi

    # Interactive prompt

    autoload -Uz vcs_info
    precmd_functions+=( vcs_info )
    setopt prompt_subst

    zstyle ':vcs_info:git:*' check-for-changes true
    zstyle ':vcs_info:*' unstagedstr '*'
    zstyle ':vcs_info:*' stagedstr '+'
    zstyle ':vcs_info:git:*' formats '%F{200}[%b%u%c]%f'
    zstyle ':vcs_info:*' enable git

    PROMPT='%(?.%F{green}âˆš.%F{red}?%?)%f %B%~%b $vcs_info_msg_0_ $ '

elif [ -n "$BASH_VERSION" ]; then

    echo "nothing bash specific"

fi

if [ "$SPIN" = "1" ]
then
    dev() {
        if [[ $1 == "test" ]]; then
            echo "Running Dev test"
            bin/test ${@:2}
        elif [[ $1 == "tc" ]]; then
            echo "Running Dev tc"
            bin/srb typecheck
        elif [[ $1 == "style" ]]; then
            echo "Running Dev style"
            bin/style ${@:2}
        elif [[ $1 == "c" ]]; then
            echo "Running Dev c"
            bin/rails console
        elif [[ $1 == "dump-graphql" ]]; then
            echo "Running Dev dump-graphql"
            bin/rails graphql:schema:dump SCHEMA_NAME=$2
        elif [[ $1 == "rbi" ]]; then
            echo "Running Dev rbi"
            bin/tapioca dsl -c 'dev rbi dsl'
        fi
    } 
fi


